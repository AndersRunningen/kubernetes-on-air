apiVersion: istio.banzaicloud.io/v1beta1
kind: Istio
metadata:
  name: {{ include "istio-gke.fullname" . }}
  labels:
    controller-tools.k8s.io: "1.0"
    app.kubernetes.io/name: {{ include "istio-gke.name" . }}
    helm.sh/chart: {{ include "istio-gke.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  version: "{{ .Values.istio.version }}"
  meshPolicy:
    mtlsMode: {{ .Values.istio.meshPolicy.mtlsMode }}
  autoMtls: {{ .Values.istio.autoMtls }}
  includeIPRanges: "*"
  excludeIPRanges: ""
  autoInjectionNamespaces:
    {{- toYaml .Values.istio.autoInjectionNamespaces | nindent 4 }}
  controlPlaneSecurityEnabled: false
  mountMtlsCerts: false
  # priorityClassName: system-cluster-critical
  defaultResources:
    requests:
      cpu: 10m
  mixerlessTelemetry:
    enabled: true
  sds:
    enabled: {{ .Values.istio.sds.enabled }}
  istiod:
    enabled: true
  pilot:
    enabled: true
    image: "docker.io/istio/pilot:{{ .Values.istio.version }}"
    replicaCount: 1
    minReplicas: 1
    maxReplicas: 5
    traceSampling: 1.0
    resources:
      requests:
        cpu: 500m
        memory: 2048Mi
    certProvider: "istiod"
  citadel:
    enabled: {{ .Values.istio.citadel.enabled }}
    caSecretName: istio-ca-secret
    image: "docker.io/istio/citadel:{{ .Values.istio.version }}"
  galley:
    enabled: false
    image: "docker.io/istio/galley:{{ .Values.istio.version }}"
    replicaCount: 1
    enableServiceDiscovery: false
    enableAnalysis: false
  gateways:
    enabled: {{ .Values.istio.gateways.enabled }}
    ingress:
      enabled: {{ .Values.istio.gateways.ingress.enabled }}
      replicaCount: 1
      minReplicas: 1
      maxReplicas: 5
      serviceType: "LoadBalancer"
      loadBalancerIP: {{ .Values.istio.gateways.ingress.loadBalancerIP }}
      serviceAnnotations: {}
      serviceLabels: {}
      ports:
        - port: 15020
          targetPort: 15020
          name: status-port
        - port: 80
          targetPort: 80
          name: http2
        - port: 443
          targetPort: 443
          name: https
        - port: 15443
          targetPort: 15443
          name: tls
      resources:
        requests:
          cpu: 100m
          memory: 128Mi
        limits:
          cpu: 2000m
          memory: 1024Mi
    egress:
      enabled: {{ .Values.istio.gateways.egress.enabled }}
      replicaCount: 1
      minReplicas: 1
      maxReplicas: 5
      serviceType: "ClusterIP"
      serviceAnnotations: {}
      serviceLabels: {}
      ports:
        - port: 80
          targetPort: 80
          name: http2
        - port: 443
          targetPort: 443
          name: https
        - port: 15443
          targetPort: 15443
          name: tls
      resources:
        requests:
          cpu: 100m
          memory: 128Mi
        limits:
          cpu: 2000m
          memory: 256Mi
    k8singress:
      enabled: {{ .Values.istio.gateways.k8singress.enabled }}
  policy:
    enabled: {{ .Values.istio.policy.enabled }}
    image: "docker.io/istio/mixer:{{ .Values.istio.version }}"
    replicaCount: 1
    minReplicas: 1
    maxReplicas: 5
  telemetry:
    enabled: false
    image: "docker.io/istio/mixer:{{ .Values.istio.version }}"
    replicaCount: 1
    minReplicas: 1
    maxReplicas: 5
  sidecarInjector:
    enabled: {{ .Values.istio.sidecarInjector.enabled }}
    image: "docker.io/istio/sidecar_injector:{{ .Values.istio.version }}"
    replicaCount: 1
    rewriteAppHTTPProbe: {{ .Values.istio.sidecarInjector.rewriteAppHTTPProbe }}
    autoInjectionPolicyEnabled: {{ .Values.istio.sidecarInjector.autoInjectionPolicyEnabled }}
    init:
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
        limits:
          cpu: 100m
          memory: 50Mi
  nodeAgent:
    enabled: false
    image: "docker.io/istio/node-agent-k8s:{{ .Values.istio.version }}"
  proxy:
    image: "docker.io/istio/proxyv2:{{ .Values.istio.version }}"
    accessLogFile: "/dev/stdout"
    accessLogFormat: ""
    accessLogEncoding: "TEXT"
    enableCoreDump: false
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 2000m
        memory: 1024Mi
  proxyInit:
    image: "docker.io/istio/proxyv2:{{ .Values.istio.version }}"
  defaultPodDisruptionBudget:
    enabled: true
  outboundTrafficPolicy:
    mode: ALLOW_ANY
  tracing:
    enabled: {{ .Values.istio.tracing.enabled }}
    tracer: {{ .Values.istio.tracing.tracer }}
    zipkin:
      address: zipkin.istio-system:9411
    datadog:
        address: $(HOST_IP):8126
    lightstep:
        address: lightstep-satellite.lightstep:9292
        accessToken: <access-token>
        secure: true
        cacertPath: /etc/lightstep/cacert.pem
  localityLB:
    enabled: false
    # distribute:
    # - from: "us-central1/*"
    #   to:
    #     "us-central1/*": 80
    #     "us-central2/*": 20
    # failover:
    # - from: us-east
    #   to: eu-west
    # - from: us-west
    #   to: us-east
  jwtPolicy: "first-party-jwt"
